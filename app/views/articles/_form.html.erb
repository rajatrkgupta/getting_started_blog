<%= form_with model: article do |form| %>
  <div>
    <%= form.label :title %><br>
    <%= form.text_field :title %>
    <% article.errors.full_messages_for(:title).each do |message| %>
      <div><%= message %></div>
    <% end %>
  </div>

  <div>
    <%= form.label :image %><br>
    <%= form.file_field :image, accept: 'image/png,image/gif,image/jpeg' %>
    <% article.errors.full_messages_for(:image).each do |message| %>
      <div><%= message %></div>
    <% end %>
  </div>

  <div>
    <%= form.label :body %><br>
    <%= form.text_area :body %><br>
    <% article.errors.full_messages_for(:body).each do |message| %>
      <div><%= message %></div>
    <% end %>
  </div>

  <div>
    <%= form.label :status %><br>
    <%= form.select :status, ['public', 'private', 'archived'], selected: 'public' %>
  </div>

  <div class="mt-2">
    <%= form.submit %>
  </div>
<% end %>

<main class="page">
  <h4> If you want to crop image before upload, Use this.</h4>
  <p>Steps: Upload => Select area => Crop</p>
  <!-- input file -->
  <div class="box">
    <input type="file" id="file-input1" accept="image/png, image/gif, image/jpeg" >
  </div>
  <!-- leftbox -->
  <div class="box-2">
    <div class="result"></div>
  </div>
  <!--rightbox-->
  <div class="box-2 img-result hide">
    <!-- result of crop -->
    <img class="cropped" src="" alt="">
  </div>
  <!-- input file -->
  <div class="box">
    <div class="options hide">
      <label> Width</label>
      <input type="number" class="img-w" value="300" min="100" max="1200" />
    </div>
    <!-- save btn -->
    <button class="btn save hide">Crop</button>
    <!-- download btn -->
    <a href="" class="btn download hide">Download</a>
  </div>
</main>

<script type="text/javascript">
  // vars
  let result = document.querySelector('.result'),
  img_result = document.querySelector('.img-result'),
  img_w = document.querySelector('.img-w'),
  img_h = document.querySelector('.img-h'),
  options = document.querySelector('.options'),
  save = document.querySelector('.save'),
  cropped = document.querySelector('.cropped'),
  dwn = document.querySelector('.download'),
  upload = document.querySelector('#file-input1'),
  articleImage = document.getElementById("article_image");
  cropper = '';

  // on change show image with crop options
  upload.addEventListener('change', (e) => {
    if (e.target.files.length) {
      console.log("Image Cropping here");
      // start file reader
      const reader = new FileReader();
      reader.onload = (e)=> {
        if(e.target.result){
          // create new image
          let img = document.createElement('img');
          img.id = 'image';
          img.src = e.target.result
          // clean result before
          result.innerHTML = '';
          // append new image
          result.appendChild(img);
          // show save btn and options
          save.classList.remove('hide');
          options.classList.remove('hide');
          // init cropper
          cropper = new Cropper(img);
        }
      };
      reader.readAsDataURL(e.target.files[0]);
    }
  });

  // save on click
  save.addEventListener('click',(e)=>{
    e.preventDefault();
    // get result to data uri
    let imgSrc = cropper.getCroppedCanvas({
      width: img_w.value // input value
    }).toDataURL();
    // remove hide class of img
    cropped.classList.remove('hide');
    img_result.classList.remove('hide');
    // show image cropped
    cropped.src = imgSrc;
    dwn.classList.remove('hide');
    dwn.download = 'imagename.png';
    dwn.setAttribute('href',imgSrc);

    cropper.getCroppedCanvas().toBlob((blob) => {
      let file = new File([blob], "my_article_logo.png", {type:"image/png", lastModified:new Date().getTime()}, 'utf-8');
      let container = new DataTransfer();
      container.items.add(file);
      articleImage.files = container.files;
    });
  });
</script>

<style type="text/css">
.page {
  margin: 1em auto;
  max-width: 768px;
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  height: 100%;
}

.box {
  padding: 0.5em;
  width: 100%;
  margin:0.5em;
}

.box-2 {
  padding: 0.5em;
  width: calc(100%/2 - 1em);
}

.options label, .options input{
  width:4em;
  padding:0.5em 1em;
}
.btn{
  background:white;
  color:black;
  border:1px solid black;
  padding: 0.5em 1em;
  text-decoration:none;
  margin:0.8em 0.3em;
  display:inline-block;
  cursor:pointer;
}

.hide {
  display: none;
}

img {
  max-width: 100%;
}
</style>
